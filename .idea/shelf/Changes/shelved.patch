Index: MySql/creations.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>-- Create the database\r\nCREATE DATABASE IF NOT EXISTS dentist_db;\r\nUSE dentist_db;\r\n\r\n-- 1. Create base table for Users\r\nCREATE TABLE `users`\r\n(\r\n    id            INT          NOT NULL AUTO_INCREMENT,\r\n    username      VARCHAR(255) NOT NULL,\r\n    email         VARCHAR(255) NOT NULL,\r\n    phone         VARCHAR(50),\r\n    password      VARCHAR(255) NOT NULL,\r\n    user_type     VARCHAR(31)  NOT NULL,\r\n    date_of_birth DATE,\r\n    PRIMARY KEY (id),\r\n    UNIQUE (username),\r\n    UNIQUE (email)\r\n);\r\n\r\n-- 2. Create table for Boards\r\nCREATE TABLE boards\r\n(\r\n    id          INT          NOT NULL AUTO_INCREMENT,\r\n    name        VARCHAR(255) NOT NULL,\r\n    description VARCHAR(1024),\r\n    PRIMARY KEY (id),\r\n    UNIQUE (name)\r\n);\r\n\r\n-- 3. Create table for Posts\r\nCREATE TABLE posts\r\n(\r\n    id           INT          NOT NULL AUTO_INCREMENT,\r\n    title        VARCHAR(255) NOT NULL,\r\n    content      TEXT,\r\n    created_date DATETIME     NOT NULL,\r\n    board_id     INT          NOT NULL,\r\n    user_id      INT,\r\n    PRIMARY KEY (id),\r\n    CONSTRAINT fk_posts_boards FOREIGN KEY (board_id) REFERENCES boards (id) ON DELETE CASCADE,\r\n    CONSTRAINT fk_posts_users FOREIGN KEY (user_id) REFERENCES `users` (id) ON DELETE SET NULL\r\n);\r\n\r\n-- 4. Create table for Dentists (inherits from Users)\r\nCREATE TABLE dentists\r\n(\r\n    id             INT          NOT NULL,\r\n    license_number VARCHAR(100) NOT NULL,\r\n    specialization VARCHAR(255),\r\n    PRIMARY KEY (id),\r\n    CONSTRAINT fk_dentists_users FOREIGN KEY (id) REFERENCES `users` (id) ON DELETE CASCADE,\r\n    UNIQUE (license_number)\r\n);\r\n\r\n-- 5. Create table for Patients (inherits from Users; date_of_birth is now in users)\r\nCREATE TABLE patients\r\n(\r\n    id                INT NOT NULL,\r\n    insurance_number  VARCHAR(255),\r\n    emergency_contact VARCHAR(255),\r\n    PRIMARY KEY (id),\r\n    CONSTRAINT fk_patients_users FOREIGN KEY (id) REFERENCES `users` (id) ON DELETE CASCADE,\r\n    UNIQUE (insurance_number)\r\n);\r\n\r\n-- 6. Create join table for Boards and Users (board members)\r\nCREATE TABLE boards_users\r\n(\r\n    board_id INT NOT NULL,\r\n    user_id  INT NOT NULL,\r\n    PRIMARY KEY (board_id, user_id),\r\n    CONSTRAINT fk_boards_users_boards FOREIGN KEY (board_id) REFERENCES boards (id) ON DELETE CASCADE,\r\n    CONSTRAINT fk_boards_users_users FOREIGN KEY (user_id) REFERENCES `users` (id) ON DELETE CASCADE\r\n);\r\n\r\n-- 7. Create table for Comments\r\nCREATE TABLE comments\r\n(\r\n    id           INT           NOT NULL AUTO_INCREMENT,\r\n    content      VARCHAR(2000) NOT NULL,\r\n    created_date DATETIME      NOT NULL,\r\n    post_id      INT           NOT NULL,\r\n    user_id      INT,\r\n    PRIMARY KEY (id),\r\n    CONSTRAINT fk_comments_posts FOREIGN KEY (post_id) REFERENCES posts (id) ON DELETE CASCADE,\r\n    CONSTRAINT fk_comments_users FOREIGN KEY (user_id) REFERENCES `users` (id) ON DELETE SET NULL\r\n);\r\n\r\n-- 8. Create table for Appointments\r\nCREATE TABLE appointments\r\n(\r\n    id         INT         NOT NULL AUTO_INCREMENT,\r\n    time       DATETIME    NOT NULL,\r\n    status     VARCHAR(50) NOT NULL,\r\n    dentist_id INT,\r\n    patient_id INT,\r\n    PRIMARY KEY (id),\r\n    CONSTRAINT fk_appointments_dentists FOREIGN KEY (dentist_id) REFERENCES dentists (id) ON DELETE SET NULL,\r\n    CONSTRAINT fk_appointments_patients FOREIGN KEY (patient_id) REFERENCES patients (id) ON DELETE SET NULL\r\n);\r\n\r\n-- 9. Create table for Treatments\r\nCREATE TABLE treatments\r\n(\r\n    id           INT          NOT NULL AUTO_INCREMENT,\r\n    title        VARCHAR(255) NOT NULL,\r\n    description  TEXT,\r\n    status       VARCHAR(50)  NOT NULL,\r\n    created_date DATETIME     NOT NULL,\r\n    patient_id   INT,\r\n    dentist_id   INT,\r\n    PRIMARY KEY (id),\r\n    CONSTRAINT fk_treatments_patients FOREIGN KEY (patient_id) REFERENCES patients (id) ON DELETE SET NULL,\r\n    CONSTRAINT fk_treatments_dentists FOREIGN KEY (dentist_id) REFERENCES dentists (id) ON DELETE SET NULL\r\n);
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/MySql/creations.sql b/MySql/creations.sql
--- a/MySql/creations.sql	(revision 4f89141d50219faaa7c5240c60d080551613596c)
+++ b/MySql/creations.sql	(date 1742548935293)
@@ -3,6 +3,8 @@
 USE dentist_db;
 
 -- 1. Create base table for Users
+-- This table stores base information about all users in the system.
+-- The user_type column is used to differentiate between dentists and patients.
 CREATE TABLE `users`
 (
     id            INT          NOT NULL AUTO_INCREMENT,
@@ -18,6 +20,7 @@
 );
 
 -- 2. Create table for Boards
+-- This table stores information about the different boards in the forum.
 CREATE TABLE boards
 (
     id          INT          NOT NULL AUTO_INCREMENT,
@@ -28,6 +31,9 @@
 );
 
 -- 3. Create table for Posts
+-- This table stores information about the individual posts in the forum.
+-- The board_id is a foreign key referencing the boards table.
+-- The user_id is a foreign key referencing the users table.
 CREATE TABLE posts
 (
     id           INT          NOT NULL AUTO_INCREMENT,
@@ -42,6 +48,7 @@
 );
 
 -- 4. Create table for Dentists (inherits from Users)
+-- This table stores additional information about dentists in the system.
 CREATE TABLE dentists
 (
     id             INT          NOT NULL,
@@ -52,7 +59,8 @@
     UNIQUE (license_number)
 );
 
--- 5. Create table for Patients (inherits from Users; date_of_birth is now in users)
+-- 5. Create table for Patients (inherits from Users)
+-- This table stores additional information about patients in the system.
 CREATE TABLE patients
 (
     id                INT NOT NULL,
@@ -64,6 +72,7 @@
 );
 
 -- 6. Create join table for Boards and Users (board members)
+-- This table stores information about which users are members of which boards.
 CREATE TABLE boards_users
 (
     board_id INT NOT NULL,
@@ -74,6 +83,9 @@
 );
 
 -- 7. Create table for Comments
+-- This table stores information about the individual comments in the forum.
+-- The post_id is a foreign key referencing the posts table.
+-- The user_id is a foreign key referencing the users table.
 CREATE TABLE comments
 (
     id           INT           NOT NULL AUTO_INCREMENT,
@@ -87,6 +99,8 @@
 );
 
 -- 8. Create table for Appointments
+-- This table stores information about appointments between dentists and patients.
+-- The dentist_id and patient_id are foreign keys referencing the dentists and patients tables.
 CREATE TABLE appointments
 (
     id         INT         NOT NULL AUTO_INCREMENT,
@@ -100,6 +114,8 @@
 );
 
 -- 9. Create table for Treatments
+-- This table stores information about the different treatments that are
+-- performed by dentists on patients.
 CREATE TABLE treatments
 (
     id           INT          NOT NULL AUTO_INCREMENT,
